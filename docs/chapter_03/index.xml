<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Program flow on How to Think Like a Computer Scientist: Learning with Python 3 (Blue Ridge Boost Edition)</title>
    <link>https://blueridgeboost.com/pythonbook/chapter_03/</link>
    <description>Recent content in Program flow on How to Think Like a Computer Scientist: Learning with Python 3 (Blue Ridge Boost Edition)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Sep 2023 11:30:50 -0400</lastBuildDate><atom:link href="https://blueridgeboost.com/pythonbook/chapter_03/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hello, little turtles!</title>
      <link>https://blueridgeboost.com/pythonbook/chapter_03/s01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blueridgeboost.com/pythonbook/chapter_03/s01/</guid>
      <description>Our first turtle program Let’s write a couple of lines of Python program to create a new turtle and start drawing a rectangle. (We’ll call the variable that refers to our first turtle alex, but we can choose another name if we follow the naming rules from the previous chapter).
To use the turtle library in a Collab Jupyter notebook, we start by installing the library.
You will have to execute this cell every time you restart a new session.</description>
    </item>
    
    <item>
      <title>Colors!</title>
      <link>https://blueridgeboost.com/pythonbook/chapter_03/s02/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blueridgeboost.com/pythonbook/chapter_03/s02/</guid>
      <description>An object can have various methods — things it can do — and it can also have attributes (sometimes called properties). For example, each turtle has a color attribute. The method invocation alex.color(&amp;quot;red&amp;quot;) will make alex red, and drawing will be red too.
The color of the turtle, the width of its pen, the position of the turtle within the window, which way it is facing, and so on are all part of its current state.</description>
    </item>
    
    <item>
      <title>Turtles!</title>
      <link>https://blueridgeboost.com/pythonbook/chapter_03/s03/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blueridgeboost.com/pythonbook/chapter_03/s03/</guid>
      <description>A bale of turtles Just like we can have many different integers in a program, we can have many turtles. Each of them is called an instance. Each instance has its own attributes and methods — so alex might draw with a thin black pen and be at some position, while tess might be going in her own direction with a thick pink pen.
import ColabTurtlePlus.Turtle as turtleturtle.clearscreen() turtle.setup(200,200)turtle.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://blueridgeboost.com/pythonbook/chapter_03/s05/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blueridgeboost.com/pythonbook/chapter_03/s05/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://blueridgeboost.com/pythonbook/chapter_03/s04/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blueridgeboost.com/pythonbook/chapter_03/s04/</guid>
      <description>&lt;h2 id=&#34;the-for-loop&#34;&gt;The &lt;strong&gt;for&lt;/strong&gt; loop&lt;/h2&gt;
&lt;p&gt;When we drew the square, it was quite tedious.  We had to explicitly repeat the steps of
moving and turning four times.  If we were drawing a hexagon, or an octogon,
or a polygon with 42 sides, it would have been worse.&lt;/p&gt;
&lt;p&gt;So a basic building block of all programs is to be able to repeat some code, over and
over again.&lt;/p&gt;
&lt;p&gt;Python’s &lt;strong&gt;for&lt;/strong&gt; loop solves this for us.   Let’s say we have some friends, and
we’d like to send them each an email inviting them to our party.  We don’t
quite know how to send email yet, so for the moment we’ll just print a message for each friend:&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
